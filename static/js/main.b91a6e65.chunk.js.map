{"version":3,"sources":["components/SearchBar.js","components/CategoryButton.js","components/CategorySelect.js","components/JokeCard.js","components/Cards.js","components/CardList.js","components/Contact.js","App.js","serviceWorker.js","index.js","img/chuck.png"],"names":["SearchBar","searchTerm","React","createRef","sendSearchTerm","e","preventDefault","term","current","value","props","findJokeWith","className","ref","this","type","placeholder","onClick","Component","CategoryButton","getJoke","CategorySelect","categorySelected","sendCategory","inputCategorySelected","currentCategory","id","category","map","cat","i","key","string","charAt","toUpperCase","slice","JokeCard","randomJoke","useState","setCategorySelected","newJoke","setNewJoke","currentJoke","length","src","Chuck","alt","currentCat","fetch","then","response","json","Cards","joke","pict","termSearch","CardList","findJoke","icon_url","Contact","rel","target","href","App","setState","result","totalJokes","total","state","cate","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.b91a6e65.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SearchBar extends Component{\r\n     searchTerm = React.createRef();\r\n\r\n     sendSearchTerm=(e)=>{\r\n          e.preventDefault();\r\n          const term = this.searchTerm.current.value;\r\n          this.props.findJokeWith(term);\r\n     }\r\n\r\n     render(){\r\n          return(\r\n               <div className=\"container mt-4 jumbotron\">\r\n                    <h1 className=\"text-center pb-3\">Are you Ready?, Chuck is Coming...</h1>\r\n                    <div className=\"row\">\r\n                         <div className=\"col-md-8\">\r\n                              <input ref={this.searchTerm} type=\"search\"\r\n                                   placeholder=\"Say Something...\"\r\n                                   className=\"form-control form-control-lg\"\r\n                              />\r\n                         </div>\r\n                         <div className=\"col-md-4\">\r\n                              <button onClick={this.sendSearchTerm} className=\"btn btn-danger btn-lg btn-block font-weight-bold\">Search</button>\r\n                         </div>\r\n                    </div>          \r\n               </div>\r\n          );\r\n     }\r\n}\r\n\r\n\r\nexport default SearchBar;","import React from 'react';\r\n\r\n\r\nconst CategoryButton = ({getJoke})=>{\r\n     return(\r\n          <button onClick={getJoke} className=\"btn btn-danger btn-lg btn-block font-weight-bold\">\r\n          Get Random Joke\r\n          </button>\r\n     );\r\n}\r\n\r\nexport default CategoryButton;","import React, { Component } from 'react';\r\n\r\nconst firstLetter = (string)=> {\r\n     return string.charAt(0).toUpperCase() + string.slice(1);\r\n   }\r\n\r\nclass CategorySelect extends Component{\r\n     \r\n     categorySelected = React.createRef();\r\n\r\n     sendCategory = (e) =>{\r\n          e.preventDefault();\r\n          const inputCategorySelected = this.categorySelected.current.value;\r\n          this.props.currentCategory(inputCategorySelected);\r\n     }\r\n\r\n     render(){\r\n          return(\r\n               <div className=\"form-group\">\r\n               <select onClick={this.sendCategory} ref={this.categorySelected} className=\"form-control form-control-lg\" id=\"exampleSelect1\">\r\n                    <option value=\"random\">Random</option>\r\n                    {this.props.category.map((cat,i)=>{\r\n                    return(\r\n                         <option   value={this.props.category[i]} \r\n                                   key={this.props.category[i]}>\r\n                                   {firstLetter(this.props.category[i])}\r\n                         </option>\r\n                         );\r\n                    })}\r\n               </select>\r\n             </div>\r\n          );\r\n     }\r\n}\r\n\r\nexport default CategorySelect;","import React, { useState } from 'react';\r\nimport CategoryButton from './CategoryButton';\r\nimport CategorySelect from './CategorySelect';\r\nimport Chuck from '../img/chuck.png';\r\n\r\n\r\nconst JokeCard = ({randomJoke, category})=>{\r\n\r\n     const [categorySelected, setCategorySelected] = useState('')\r\n     let [newJoke, setNewJoke] = useState('');\r\n\r\n\r\n     const currentCategory = (currentCat)=>{\r\n          setCategorySelected(currentCat);\r\n     }\r\n\r\n     const getJoke = ()=>{\r\n          if(!categorySelected.length>0 || categorySelected==='random'){\r\n               setCategorySelected('random')\r\n               fetch('https://api.chucknorris.io/jokes/random')\r\n\t\t\t.then(response=>response.json())\r\n               .then(newJoke=>setNewJoke(newJoke.value));\r\n          }else{\r\n               fetch(`https://api.chucknorris.io/jokes/random?category=${categorySelected}`)\r\n               .then(response=>response.json())\r\n               .then(newJoke=>setNewJoke(newJoke.value));\r\n          }\r\n          return newJoke;\r\n     }\r\n\r\n     const currentJoke = (!categorySelected.length>0) ? randomJoke :newJoke        \r\n\r\n     return(\r\n          <div className=\"row\">\r\n               <div className=\"col-md-4\">\r\n                    <img src={Chuck} alt=\"chuck\"/>\r\n               </div>\r\n               <div className=\"col-md-8\">\r\n                    <div className=\"card border-danger mb-3\">\r\n                         <div className=\"card-body \">\r\n                              <h4 className=\"card-title h1\">The truth is that...</h4>\r\n                              <p className=\"card-text font-italic lead\">\r\n                                   {currentJoke}\r\n                              </p>\r\n                              <div className=\"row\">\r\n                                   <div className=\"col-md-6\">\r\n                                        <CategorySelect \r\n                                             category={category}\r\n                                             currentCategory={currentCategory}\r\n                                        />\r\n                                   </div>\r\n                                   <div className=\"col-md-6\">\r\n                                        <CategoryButton getJoke={getJoke}/>\r\n                                   </div>\r\n                              </div>\r\n                          </div>\r\n                    </div>\r\n               </div>\r\n          </div>\r\n     );\r\n}\r\n\r\nexport default JokeCard;","import React from 'react';\r\n\r\nconst Cards=({ joke, pict, termSearch })=>{\r\n     return(\r\n          <div className=\"col-12 col-sm-6 col-md-4 col-lg-3 mb-4\">\r\n               {/* Card Start */}\r\n               <div className=\"card border-danger mb-3\">\r\n                    <div className=\"card-header text-center\">\r\n                         <img src={pict} alt=\"chuckIcon\"/>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                         <h4 className=\"card-title text-center text-capitalize\">\r\n                              {`About ${termSearch}`}\r\n                         </h4>\r\n                         <p className=\"card-text\">\r\n                              {joke}\r\n                         </p>\r\n                    </div>\r\n               </div>\r\n               {/* Card End */}\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Cards from './Cards'\r\n\r\nconst CardList = ({ findJoke, termSearch})=>{\r\n     return(\r\n          <div className=\"container col-12 p-5 row\">\r\n              {\r\n                   findJoke.map((joke,i)=>{\r\n                        return(\r\n                             <Cards \r\n                                   key={i}\r\n                                   pict={joke.icon_url}\r\n                                   joke={joke.value}\r\n                                   termSearch={termSearch}\r\n                             />\r\n                        )\r\n                   })\r\n              }\r\n          </div>\r\n     )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst Contact = ()=>{\r\n     return(\r\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n               <div className=\"container justify-content-center align-items-center h4 m-auto\">\r\n               <a className=\"nav-link mr-2\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/AbdelTrochez\">\r\n                    <i className=\"fab fa-github\"></i> \r\n               </a>\r\n               <a className=\"nav-link mr-2\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.linkedin.com/in/abdel-alberto-trochez-rios-a25172108/\">\r\n                    <i className=\"fab fa-linkedin-in\"></i>\r\n               </a>\r\n               <a className=\"nav-link mr-2\" rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.facebook.com/abdel.trochez\">\r\n                    <i className=\"fab fa-facebook-f\"></i>\r\n               </a>\r\n               </div>\r\n          </nav>\r\n     );\r\n}\r\n\r\nexport default Contact;","import React, { Component, Fragment } from 'react';\nimport SearchBar from './components/SearchBar';\nimport JokeCard from './components/JokeCard';\nimport CardList from './components/CardList';\nimport Contact from './components/Contact';\n\n\nclass App extends Component {\n  \n  constructor(){\n\t\tsuper()\n\t\tthis.state={\n      randomJoke:'',\n      category:[],\n      findJoke:[],\n      termSearch:'',\n      totalJokes:''\n\t\t}\n  }\n  findJokeWith=(term)=>{\n    this.setState({termSearch:term});\n    if(term.length>0){\n    // Get joke by Search\n      fetch(`https://api.chucknorris.io/jokes/search?query=${term}`)\n\t\t\t.then(response=>response.json())\n      .then(getJoke=>{this.setState({findJoke:getJoke.result})\n                      this.setState({totalJokes:getJoke.total})                  \n    });\n    }else{\n      if(!this.state.totalJokes>0 || !term.length>0){\n      // Reset Jokes\n      fetch(`https://api.chucknorris.io/jokes/search?query=ggggggggggg`)\n      .then(response=>response.json())\n      .then(getJoke=>this.setState({findJoke:getJoke.result})); \n      }\n    }\n  }\n\n\tcomponentDidMount(){\n    // Get random Joke\n\t\tfetch('https://api.chucknorris.io/jokes/random')\n\t\t\t.then(response=>response.json())\n      .then(joke=> this.setState({randomJoke:joke.value}));\n\n    // Get Categories\n    fetch('https://api.chucknorris.io/jokes/categories')\n\t\t\t.then(response=>response.json())\n      .then(cate=> this.setState({category:cate}));\n\t}\n\n  render(){\n    return (\n      <Fragment>\n      <Contact/>\n      <h1 className=\"text-danger text-center mt-auto\">{`<AbdelTrochez/>`}</h1>\n      <div className=\"container\">  \n        <SearchBar  \n          findJokeWith={this.findJokeWith}\n        />\n        <CardList \n          findJoke={this.state.findJoke}\n          termSearch={this.state.termSearch}\n        />\n        <JokeCard \n          randomJoke={this.state.randomJoke} \n          category={this.state.category}\n        />\n      </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/chuck.872baa13.png\";"],"sourceRoot":""}